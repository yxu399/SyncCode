{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { generateId } from '@collab/shared';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.userId = generateId();\n    this.username = `User-${this.userId.slice(0, 6)}`;\n  }\n  connect(serverUrl = 'http://localhost:5000') {\n    var _this$socket;\n    if ((_this$socket = this.socket) !== null && _this$socket !== void 0 && _this$socket.connected) {\n      return this.socket;\n    }\n    console.log('Attempting to connect to server at:', serverUrl);\n    this.socket = io(serverUrl, {\n      timeout: 5000,\n      transports: ['websocket', 'polling']\n    });\n\n    // Connection events\n    this.socket.on('connect', () => {\n      var _this$socket2;\n      console.log('✅ Connected to server:', (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.id);\n    });\n    this.socket.on('connect_error', error => {\n      console.error('❌ Connection error:', error);\n    });\n    this.socket.on('disconnect', reason => {\n      console.log('❌ Disconnected from server:', reason);\n    });\n\n    // Document events\n    this.socket.on('document:initial-load', data => {\n      console.log('Received initial document:', data);\n    });\n    this.socket.on('document:line-updated', data => {\n      console.log('Line updated:', data);\n    });\n\n    // Room events\n    this.socket.on('room:error', data => {\n      console.error('Room error:', data);\n    });\n\n    // Presence events\n    this.socket.on('presence:user-joined', data => {\n      console.log('User joined:', data);\n    });\n    this.socket.on('presence:user-left', data => {\n      console.log('User left:', data);\n    });\n    return this.socket;\n  }\n  joinRoom(roomId) {\n    if (!this.socket) {\n      throw new Error('Socket not connected');\n    }\n    this.socket.emit('room:join', {\n      roomId,\n      userId: this.userId,\n      username: this.username\n    });\n  }\n  editLine(roomId, lineNumber, content) {\n    if (!this.socket) {\n      throw new Error('Socket not connected');\n    }\n    this.socket.emit('document:edit-line', {\n      roomId,\n      lineNumber,\n      content\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  getSocket() {\n    return this.socket;\n  }\n  getUserInfo() {\n    return {\n      userId: this.userId,\n      username: this.username\n    };\n  }\n}\nexport const socketService = new SocketService();","map":{"version":3,"names":["io","generateId","SocketService","constructor","socket","userId","username","slice","connect","serverUrl","_this$socket","connected","console","log","timeout","transports","on","_this$socket2","id","error","reason","data","joinRoom","roomId","Error","emit","editLine","lineNumber","content","disconnect","getSocket","getUserInfo","socketService"],"sources":["/Users/xuy4/collaborative-editor/packages/client/src/services/SocketService.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\nimport { \n  ServerToClientEvents, \n  ClientToServerEvents,\n  generateId \n} from '@collab/shared';\n\ntype TypedSocket = Socket<ServerToClientEvents, ClientToServerEvents>;\n\nclass SocketService {\n  private socket: TypedSocket | null = null;\n  private userId: string = generateId();\n  private username: string = `User-${this.userId.slice(0, 6)}`;\n\n  connect(serverUrl: string = 'http://localhost:5000'): TypedSocket {\n    if (this.socket?.connected) {\n      return this.socket;\n    }\n\n    console.log('Attempting to connect to server at:', serverUrl);\n    this.socket = io(serverUrl, {\n      timeout: 5000,\n      transports: ['websocket', 'polling']\n    });\n\n    // Connection events\n    this.socket.on('connect', () => {\n      console.log('✅ Connected to server:', this.socket?.id);\n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.error('❌ Connection error:', error);\n    });\n\n    this.socket.on('disconnect', (reason) => {\n      console.log('❌ Disconnected from server:', reason);\n    });\n\n    // Document events\n    this.socket.on('document:initial-load', (data) => {\n      console.log('Received initial document:', data);\n    });\n\n    this.socket.on('document:line-updated', (data) => {\n      console.log('Line updated:', data);\n    });\n\n    // Room events\n    this.socket.on('room:error', (data) => {\n      console.error('Room error:', data);\n    });\n\n    // Presence events\n    this.socket.on('presence:user-joined', (data) => {\n      console.log('User joined:', data);\n    });\n\n    this.socket.on('presence:user-left', (data) => {\n      console.log('User left:', data);\n    });\n\n    return this.socket;\n  }\n\n  joinRoom(roomId: string): void {\n    if (!this.socket) {\n      throw new Error('Socket not connected');\n    }\n\n    this.socket.emit('room:join', {\n      roomId,\n      userId: this.userId,\n      username: this.username\n    });\n  }\n\n  editLine(roomId: string, lineNumber: number, content: string): void {\n    if (!this.socket) {\n      throw new Error('Socket not connected');\n    }\n\n    this.socket.emit('document:edit-line', {\n      roomId,\n      lineNumber,\n      content\n    });\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  getSocket(): TypedSocket | null {\n    return this.socket;\n  }\n\n  getUserInfo() {\n    return {\n      userId: this.userId,\n      username: this.username\n    };\n  }\n}\n\nexport const socketService = new SocketService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}