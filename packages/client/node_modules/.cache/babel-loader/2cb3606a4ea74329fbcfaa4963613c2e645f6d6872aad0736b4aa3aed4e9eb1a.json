{"ast":null,"code":"import{io}from'socket.io-client';import{generateId}from'@collab/shared';class SocketService{constructor(){this.socket=null;this.userId=generateId();this.username=\"User-\".concat(this.userId.slice(0,6));}connect(){var _this$socket;let serverUrl=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'http://localhost:5000';if((_this$socket=this.socket)!==null&&_this$socket!==void 0&&_this$socket.connected){return this.socket;}this.socket=io(serverUrl);// Connection events\nthis.socket.on('connect',()=>{var _this$socket2;console.log('Connected to server:',(_this$socket2=this.socket)===null||_this$socket2===void 0?void 0:_this$socket2.id);});this.socket.on('disconnect',()=>{console.log('Disconnected from server');});// Document events\nthis.socket.on('document:initial-load',data=>{console.log('Received initial document:',data);});this.socket.on('document:line-updated',data=>{console.log('Line updated:',data);});// Room events\nthis.socket.on('room:error',data=>{console.error('Room error:',data);});// Presence events\nthis.socket.on('presence:user-joined',data=>{console.log('User joined:',data);});this.socket.on('presence:user-left',data=>{console.log('User left:',data);});return this.socket;}joinRoom(roomId){if(!this.socket){throw new Error('Socket not connected');}this.socket.emit('room:join',{roomId,userId:this.userId,username:this.username});}editLine(roomId,lineNumber,content){if(!this.socket){throw new Error('Socket not connected');}this.socket.emit('document:edit-line',{roomId,lineNumber,content});}disconnect(){if(this.socket){this.socket.disconnect();this.socket=null;}}getSocket(){return this.socket;}getUserInfo(){return{userId:this.userId,username:this.username};}}export const socketService=new SocketService();","map":{"version":3,"names":["io","generateId","SocketService","constructor","socket","userId","username","concat","slice","connect","_this$socket","serverUrl","arguments","length","undefined","connected","on","_this$socket2","console","log","id","data","error","joinRoom","roomId","Error","emit","editLine","lineNumber","content","disconnect","getSocket","getUserInfo","socketService"],"sources":["/Users/xuy4/collaborative-editor/packages/client/src/services/SocketService.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\nimport { \n  ServerToClientEvents, \n  ClientToServerEvents,\n  generateId \n} from '@collab/shared';\n\ntype TypedSocket = Socket<ServerToClientEvents, ClientToServerEvents>;\n\nclass SocketService {\n  private socket: TypedSocket | null = null;\n  private userId: string = generateId();\n  private username: string = `User-${this.userId.slice(0, 6)}`;\n\n  connect(serverUrl: string = 'http://localhost:5000'): TypedSocket {\n    if (this.socket?.connected) {\n      return this.socket;\n    }\n\n    this.socket = io(serverUrl);\n\n    // Connection events\n    this.socket.on('connect', () => {\n      console.log('Connected to server:', this.socket?.id);\n    });\n\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n\n    // Document events\n    this.socket.on('document:initial-load', (data) => {\n      console.log('Received initial document:', data);\n    });\n\n    this.socket.on('document:line-updated', (data) => {\n      console.log('Line updated:', data);\n    });\n\n    // Room events\n    this.socket.on('room:error', (data) => {\n      console.error('Room error:', data);\n    });\n\n    // Presence events\n    this.socket.on('presence:user-joined', (data) => {\n      console.log('User joined:', data);\n    });\n\n    this.socket.on('presence:user-left', (data) => {\n      console.log('User left:', data);\n    });\n\n    return this.socket;\n  }\n\n  joinRoom(roomId: string): void {\n    if (!this.socket) {\n      throw new Error('Socket not connected');\n    }\n\n    this.socket.emit('room:join', {\n      roomId,\n      userId: this.userId,\n      username: this.username\n    });\n  }\n\n  editLine(roomId: string, lineNumber: number, content: string): void {\n    if (!this.socket) {\n      throw new Error('Socket not connected');\n    }\n\n    this.socket.emit('document:edit-line', {\n      roomId,\n      lineNumber,\n      content\n    });\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  getSocket(): TypedSocket | null {\n    return this.socket;\n  }\n\n  getUserInfo() {\n    return {\n      userId: this.userId,\n      username: this.username\n    };\n  }\n}\n\nexport const socketService = new SocketService();"],"mappings":"AAAA,OAASA,EAAE,KAAgB,kBAAkB,CAC7C,OAGEC,UAAU,KACL,gBAAgB,CAIvB,KAAM,CAAAC,aAAc,CAAAC,YAAA,OACVC,MAAM,CAAuB,IAAI,MACjCC,MAAM,CAAWJ,UAAU,CAAC,CAAC,MAC7BK,QAAQ,SAAAC,MAAA,CAAmB,IAAI,CAACF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,GAE1DC,OAAOA,CAAA,CAA2D,KAAAC,YAAA,IAA1D,CAAAC,SAAiB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,uBAAuB,CACjD,IAAAF,YAAA,CAAI,IAAI,CAACN,MAAM,UAAAM,YAAA,WAAXA,YAAA,CAAaK,SAAS,CAAE,CAC1B,MAAO,KAAI,CAACX,MAAM,CACpB,CAEA,IAAI,CAACA,MAAM,CAAGJ,EAAE,CAACW,SAAS,CAAC,CAE3B;AACA,IAAI,CAACP,MAAM,CAACY,EAAE,CAAC,SAAS,CAAE,IAAM,KAAAC,aAAA,CAC9BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAAF,aAAA,CAAE,IAAI,CAACb,MAAM,UAAAa,aAAA,iBAAXA,aAAA,CAAaG,EAAE,CAAC,CACtD,CAAC,CAAC,CAEF,IAAI,CAAChB,MAAM,CAACY,EAAE,CAAC,YAAY,CAAE,IAAM,CACjCE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACzC,CAAC,CAAC,CAEF;AACA,IAAI,CAACf,MAAM,CAACY,EAAE,CAAC,uBAAuB,CAAGK,IAAI,EAAK,CAChDH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEE,IAAI,CAAC,CACjD,CAAC,CAAC,CAEF,IAAI,CAACjB,MAAM,CAACY,EAAE,CAAC,uBAAuB,CAAGK,IAAI,EAAK,CAChDH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEE,IAAI,CAAC,CACpC,CAAC,CAAC,CAEF;AACA,IAAI,CAACjB,MAAM,CAACY,EAAE,CAAC,YAAY,CAAGK,IAAI,EAAK,CACrCH,OAAO,CAACI,KAAK,CAAC,aAAa,CAAED,IAAI,CAAC,CACpC,CAAC,CAAC,CAEF;AACA,IAAI,CAACjB,MAAM,CAACY,EAAE,CAAC,sBAAsB,CAAGK,IAAI,EAAK,CAC/CH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEE,IAAI,CAAC,CACnC,CAAC,CAAC,CAEF,IAAI,CAACjB,MAAM,CAACY,EAAE,CAAC,oBAAoB,CAAGK,IAAI,EAAK,CAC7CH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEE,IAAI,CAAC,CACjC,CAAC,CAAC,CAEF,MAAO,KAAI,CAACjB,MAAM,CACpB,CAEAmB,QAAQA,CAACC,MAAc,CAAQ,CAC7B,GAAI,CAAC,IAAI,CAACpB,MAAM,CAAE,CAChB,KAAM,IAAI,CAAAqB,KAAK,CAAC,sBAAsB,CAAC,CACzC,CAEA,IAAI,CAACrB,MAAM,CAACsB,IAAI,CAAC,WAAW,CAAE,CAC5BF,MAAM,CACNnB,MAAM,CAAE,IAAI,CAACA,MAAM,CACnBC,QAAQ,CAAE,IAAI,CAACA,QACjB,CAAC,CAAC,CACJ,CAEAqB,QAAQA,CAACH,MAAc,CAAEI,UAAkB,CAAEC,OAAe,CAAQ,CAClE,GAAI,CAAC,IAAI,CAACzB,MAAM,CAAE,CAChB,KAAM,IAAI,CAAAqB,KAAK,CAAC,sBAAsB,CAAC,CACzC,CAEA,IAAI,CAACrB,MAAM,CAACsB,IAAI,CAAC,oBAAoB,CAAE,CACrCF,MAAM,CACNI,UAAU,CACVC,OACF,CAAC,CAAC,CACJ,CAEAC,UAAUA,CAAA,CAAS,CACjB,GAAI,IAAI,CAAC1B,MAAM,CAAE,CACf,IAAI,CAACA,MAAM,CAAC0B,UAAU,CAAC,CAAC,CACxB,IAAI,CAAC1B,MAAM,CAAG,IAAI,CACpB,CACF,CAEA2B,SAASA,CAAA,CAAuB,CAC9B,MAAO,KAAI,CAAC3B,MAAM,CACpB,CAEA4B,WAAWA,CAAA,CAAG,CACZ,MAAO,CACL3B,MAAM,CAAE,IAAI,CAACA,MAAM,CACnBC,QAAQ,CAAE,IAAI,CAACA,QACjB,CAAC,CACH,CACF,CAEA,MAAO,MAAM,CAAA2B,aAAa,CAAG,GAAI,CAAA/B,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}